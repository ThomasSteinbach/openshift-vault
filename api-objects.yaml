apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: vault
    name: vault
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: vault:latest
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  data:
    VAULT_LOCAL_CONFIG: "storage \"file\" {\n  path = \"/vault/file\"\n}\nlistener\
      \ \"tcp\" {\n  address = \"0.0.0.0:8200\"\n  tls_disable = 1\n}\ndisable_mlock\
      \ = true\n"
  kind: ConfigMap
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: vault
    name: vault
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: vault-file
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    volumeName: vault-vault-file
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: vault-logs
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    volumeName: vault-vault-logs
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: builder
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: default
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: deployer
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: vault
    name: vault
  spec:
    replicas: 1
    selector:
      app: vault
      deploymentconfig: vault
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        post:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - sleep 3; vault unseal -address="http://vault.${OPENSHIFT_DEPLOYMENT_NAMESPACE}.svc:$VAULT_SERVICE_PORT"
              "$STARTUP_UNSEAL_TOKEN"
            containerName: vault
            env:
            - name: STARTUP_UNSEAL_TOKEN
              valueFrom:
                secretKeyRef:
                  key: STARTUP_UNSEAL_TOKEN
                  name: vault
          failurePolicy: Retry
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: vault
          deploymentconfig: vault
      spec:
        containers:
        - args:
          - server
          env:
          - name: VAULT_LOCAL_CONFIG
            valueFrom:
              configMapKeyRef:
                key: VAULT_LOCAL_CONFIG
                name: vault
          - name: SKIP_SETCAP
            value: 'true'
          - name: VAULT_ADDR
            value: http://127.0.0.1:8200
          image: vault@sha256:9ee0518036323fad67911d31ef123748ee8c0ba43ed0daa1f4c4bcf2c7f3de6e
          imagePullPolicy: IfNotPresent
          name: vault
          ports:
          - containerPort: 8200
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /vault/file
            name: vault-file
          - mountPath: /vault/logs
            name: vault-logs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: vault-file
          persistentVolumeClaim:
            claimName: vault-file
        - name: vault-logs
          persistentVolumeClaim:
            claimName: vault-logs
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - vault
        from:
          kind: ImageStreamTag
          name: vault:latest
          namespace: OC_PROJECT_NAME
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: vault
    name: vault
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: 8200-tcp
      port: 8200
      protocol: TCP
      targetPort: 8200
    selector:
      app: vault
      deploymentconfig: vault
    sessionAffinity: None
    type: NodePort
kind: List
metadata: {}
